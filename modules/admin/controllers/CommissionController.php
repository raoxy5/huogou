<?php
/**
 * Created by PhpStorm.
 * User: jun
 * Date: 15/10/31
 * Time: 下午3:02
 */
namespace app\modules\admin\controllers;

use app\helpers\DateFormat;
use app\helpers\Excel;
use app\models\RechargeOrderDistribution;
use app\models\Withdraw;
use app\modules\admin\models\Admin;
use app\modules\admin\models\BackstageLog;
use app\services\User;
use yii\data\Pagination;
use yii\helpers\ArrayHelper;
use Yii;
use app\helpers\Ex;
use yii\helpers\Json;

class CommissionController extends BaseController
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        return '已关闭佣金管理';
    }

    public function actionWithdraw()
    {

        $query = Withdraw::find()->select('withdraw.*, u.phone as user_phone, u.email')->leftJoin('users as u', 'u.id=withdraw.user_id');

        $status = Yii::$app->request->post('status', '-1');
        $start_time = Yii::$app->request->post('start_time', '');
        $end_time = Yii::$app->request->post('end_time', '');
        $account = Yii::$app->request->post('account', '');
        $excel = Yii::$app->request->get('excel', '');

        $condition = ['status' => $status, 'start_time' => $start_time, 'end_time' => $end_time, 'account' => $account];


        if ($status != -1) {
            $query->andWhere(['withdraw.status' => $status]);
        }
        if ($account != '') {
            $query->andWhere(['or', 'u.phone="'.$account.'"', 'u.email="'.$account.'"', 'u.nickname="'.$account.'"']);
        }
        if ($start_time != '') {
            $query->andWhere(['>=', 'withdraw.apply_time', strtotime($start_time)]);
        }
        if ($end_time != '') {
            $query->andWhere(['<=', 'withdraw.apply_time', strtotime($end_time)]);
        }
        $query->orderBy('withdraw.apply_time desc');

        $countQuery = clone $query;
        $totalCount = $countQuery->count();
        if(isset($excel) && $excel == 'withdraw'){
            $pagination = new Pagination(['totalCount' => $totalCount, 'defaultPageSize' => PHP_INT_MAX, 'pageSizeLimit'=>[0, PHP_INT_MAX]]);
            $list = $query->offset($pagination->offset)->limit($pagination->limit)->asArray()->all();
            $data[0] = ['id'=>'编号', 'user_phone'=>'手机号', 'email'=>'邮箱', 'money'=>'提现金额', 'bank'=>'开户行', 'account'=>'户名','bank_number'=>'账号','phone'=>'联系电话', 'status'=>'状态', 'apply_time'=>'时间'];

            $data = [];
            foreach($list as $key => $val){
                $key = $key + 1;
                $data[$key]['id'] = $val['id'];
                $data[$key]['user_phone'] = $val['user_phone'];
                $data[$key]['email'] = $val['email'];
                $data[$key]['money'] = $val['money'];
                $data[$key]['bank'] = $val['bank'];
                $data[$key]['account'] = $val['account'];
                $data[$key]['bank_number'] = $val['bank_number'];
                $data[$key]['phone'] = $val['phone'];
                if($val['status'] == 0){
                    $status = '新建';
                } elseif($val['status'] == 1){
                    $status = '待处理';
                }elseif($val['status'] == 2){
                    $status = '完成';
                }elseif($val['status'] == 3){
                    $status = '驳回';
                }
                $data[$key]['status'] = $status;
                $data[$key]['apply_time'] = DateFormat::microDate($val['apply_time']);
            }
            $excel = new Ex();
            $excel->download( $data, '佣金提现-'.date('Y-m-d H:i:s').'.xls');
        }else{
            $pagination = new Pagination(['totalCount' => $totalCount, 'defaultPageSize' => 25]);
            $list = $query->offset($pagination->offset)->limit($pagination->limit)->asArray()->all();
        }

        $get = Yii::$app->request->get();
        if(empty($get)){
            $url = Yii::$app->request->getUrl().'?excel=withdraw';
        }else{
            $url = Yii::$app->request->getUrl().'&excel=withdraw';
        }

        return $this->render('withdraw', [
            'list' => $list,
            'pagination' => $pagination,
            'condition' => $condition,
            'url' => $url
        ]);
    }

    public function actionWithdrawView()
    {
        $request = \Yii::$app->request;
        $id = $request->get('id');
        $info = Withdraw::findOne($id);

        $admin = Admin::find()->all();
        $arr = ArrayHelper::map($admin, 'id', 'real_name');
        $info['audit_user'] = isset($arr[$info['audit_user']]) ? $arr[$info['audit_user']] : '';
        $info['pass_user'] = isset($arr[$info['pass_user']]) ? $arr[$info['pass_user']] : '';

        $rejectReason = [
            '电话号码不正确' => '电话号码不正确',
            '银行信息错误' => '银行信息错误',
            '支行信息错误' => '支行信息错误',
            '账号信息错误' => '账号信息错误',
            '其它' => '其它',
        ];
        return $this->render('withdraw-view', [
            'info' => $info,
            'rejectReason' => $rejectReason,
        ]);
    }

    public function actionWithdrawAudit()
    {
        $request = \Yii::$app->request;
        $id = $request->post('id');
        $rejectReason = $request->post('reject_reason');
        $pass = $request->post('pass');
        $info = Withdraw::findOne($id);

        $userId = \Yii::$app->admin->id;
        if ($info && $rejectReason) {
            if ($rejectReason == '其它') {
                $rejectReason = $request->post('other');
            }
            $trans = \Yii::$app->db->beginTransaction();
            try {
                $info->status= 3;
                $info->fail_reason = $rejectReason;
                $info->audit_user = $userId;
                $info->audit_time = time();
                if (!$info->save(false)) {
                    $trans->rollBack();
                    return Json::encode(['error' => 1, 'message' => '失败']);
                }

                $user = \app\models\User::findOne($info['user_id']);
                $user->commission = $user->commission + $info['money'] * 100;
                if (!$user->save()) {
                    $trans->rollBack();
                    return Json::encode(['error' => 1, 'message' => '失败']);
                }

                $trans->commit();
            } catch (\Exception $e) {
                $trans->rollBack();
            }
            BackstageLog::addLog(\Yii::$app->admin->id, 5, '佣金驳回-编号'.$info['id']);
        } elseif ($info && $pass) {
            $info->status= 1;
            $info->audit_user = $userId;
            $info->audit_time = time();
            $info->save();
            BackstageLog::addLog(\Yii::$app->admin->id, 5, '佣金审核-编号'.$info['id']);
        }
        return $this->redirect(['commission/withdraw-view', 'id'=>$id]);
    }

    public function actionRecharge()
    {
        $request = \Yii::$app->request;
        $status = Yii::$app->request->get('status', '-1');
        $start_time = Yii::$app->request->get('start_time', '');
        $end_time = Yii::$app->request->get('end_time', '');
        $account = Yii::$app->request->get('account', '');
        $get = Yii::$app->request->get();
        $condition = ['status' => $status, 'start_time' => $start_time, 'end_time' => $end_time, 'account' => $account];

        if ($start_time != '') {
            $start_time = strtotime($start_time);
        }
        if ($end_time != '') {
            $end_time = strtotime($end_time);
        }

        $page = $request->get('page');

        if(isset($get['excel']) && $get['excel'] == 'crecharge'){
            $data = [];
            $list = RechargeOrderDistribution::rechargeOrderList(['payment'=>4, 'status'=>$status, 'startTime' => $start_time, 'endTime' => $end_time, 'account' => $account], $page, PHP_INT_MAX);
            $data[0] = ['id'=>'编号', 'phone'=>'手机', 'email'=>'邮箱','money'=>'充值金额','status'=>'状态', 'time'=>'时间'];
            foreach($list['list'] as $key => $val){
                $user = User::baseInfo($val['user_id']);
                $key = $key +1;
                $data[$key]['id'] = $val['id'];
                $data[$key]['phone'] = $user['phone'];
                $data[$key]['email'] = $user['email'];
                $data[$key]['money'] = $val['money'];
                if($val['status'] == 0) $s = '为完成';else $s = '已完成';
                $data[$key]['status'] = $s;
                $data[$key]['time'] = DateFormat::microDate($val['pay_time']);
            }
            $excel = new Ex();
            $excel->download($data, '充值到账户-'.date('Y-m-d H:i:s').'.xls');
        }

        $rechargeListInfo = RechargeOrderDistribution::rechargeOrderList(['payment'=>4, 'status'=>$status, 'startTime' => $start_time, 'endTime' => $end_time, 'account' => $account], $page, 25);
        $list = $rechargeListInfo['list'];
        foreach($list as &$val){
            $val['user_id'] = User::baseInfo($val['user_id']);
        }
        $pagination = $rechargeListInfo['pagination'];

        if(empty($get)){
            $url = Yii::$app->request->getUrl().'?excel=crecharge';
        }else{
            $url = Yii::$app->request->getUrl().'&excel=crecharge';
        }

        return $this->render('recharge', [
            'list' => $list,
            'pagination' => $pagination,
            'condition' => $condition,
            'url' => $url,
        ]);
    }

    public function actionRechargeView()
    {
        $request = \Yii::$app->request;
        $id = $request->get('id');
        $recharge = RechargeOrderDistribution::rechargeOrderDetail($id);
        return $this->render('recharge-view', [
            'info'=>$recharge,
        ]);
    }


}